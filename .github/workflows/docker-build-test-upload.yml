name: Download parent image, build a new one and test it; then upload the image, tags and manifests to GitHub artifacts

env:
  OWNER: ${{ github.repository_owner }}

on:
  workflow_call:
    inputs:
      parentImage:
        description: Parent image name
        required: true
        type: string
      image:
        description: Image name
        required: true
        type: string
      platform:
        description: Image platform
        required: true
        type: string
      runsOn:
        description: GitHub Actions Runner image
        required: true
        type: string
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true

jobs:
  build-test-upload:
    runs-on: ${{ inputs.runsOn }}

    steps:
      - name: Checkout Repo ⚡️
        uses: actions/checkout@v3
      - name: Create dev environment 📦
        uses: ./.github/actions/create-dev-env
        with:
          platform: ${{ inputs.platform }}

      # Self-hosted runners share a state (whole VM) between runs
      - name: Reset docker state and cleanup artifacts 🗑️
        if: ${{ inputs.platform != 'x86_64' }}
        run: |
          docker system prune --all --force
          rm -rf /tmp/tags/
          rm -rf /tmp/hist_lines/
          rm -rf /tmp/manifests/
        shell: bash

      - name: Load parent built image to Docker 📥
        if: ${{ inputs.parentImage != '' }}
        uses: ./.github/actions/load-image
        with:
          image: ${{ inputs.parentImage }}
          platform: ${{ inputs.platform }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # - name: Build main image 🛠
      #   run: docker build --rm --force-rm --tag ${{ env.OWNER }}/${{ inputs.image }} ${{ inputs.image }}/
      #   env:
      #     DOCKER_BUILDKIT: 1
      #     # Full logs for CI build
      #     BUILDKIT_PROGRESS: plain
      #   shell: bash

      - name: Build Containers
        if: github.refs == 'refs/heads/main'
        uses: docker/build-push-action@v4
        with:
          context: ${{ inputs.image }}/
          push: false 
          load: true
          # Push to renci-registry and dockerhub here.
          # cache comes from dockerhub.
          tags: |
            ${{ env.OWNER }}/${{ inputs.image }}
          cache-from: type=registry,ref=${{ env.OWNER }}/${{ inputs.image }}:buildcache
          cache-to: type=registry,ref=${{ env.OWNER }}/${{ inputs.image }}:buildcache,mode=max

      - name: Build Containers
        if: github.refs == 'refs/heads/develop'
        uses: docker/build-push-action@v4
        with:
          context: ${{ inputs.image }}/
          push: false 
          load: true
          # Push to renci-registry and dockerhub here.
          # cache comes from dockerhub.
          tags: |
            ${{ env.OWNER }}/${{ inputs.image }}:dev
          cache-from: type=registry,ref=${{ env.OWNER }}/${{ inputs.image }}:buildcache
          cache-to: type=registry,ref=${{ env.OWNER }}/${{ inputs.image }}:buildcache,mode=max

      - name: Run tests ✅
        run: python3 -m tests.run_tests --short-image-name ${{ inputs.image }} --owner ${{ env.OWNER }}
        shell: bash

      - name: Write tags file 🏷
        run: |
          python3 -m tagging.write_tags_file --short-image-name ${{ inputs.image }} --tags-dir /tmp/tags/ --owner ${{ env.OWNER }}
        shell: bash

      - name: Upload tags file 💾
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.image }}-${{ inputs.platform }}-tags
          path: /tmp/tags/${{ inputs.platform }}-${{ inputs.image }}.txt
          retention-days: 3

      - name: Write manifest and build history file 🏷
        run: python3 -m tagging.write_manifest --short-image-name ${{ inputs.image }} --hist-line-dir /tmp/hist_lines/ --manifest-dir /tmp/manifests/ --owner ${{ env.OWNER }}
        shell: bash

      - name: Upload manifest file 💾
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.image }}-${{ inputs.platform }}-manifest
          path: /tmp/manifests/${{ inputs.platform }}-${{ inputs.image }}-*.md
          retention-days: 3
          
      - name: Upload build history line 💾
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.image }}-${{ inputs.platform }}-history_line
          path: /tmp/hist_lines/${{ inputs.platform }}-${{ inputs.image }}-*.txt
          retention-days: 3

      - name: Save image as a tar for later use 💾
        run: docker save ${{ env.OWNER }}/${{ inputs.image }} -o /tmp/${{ inputs.image }}-${{ inputs.platform }}.tar
        shell: bash

      - name: Upload image as artifact 💾
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.image }}-${{ inputs.platform }}
          path: /tmp/${{ inputs.image }}-${{ inputs.platform }}.tar
          retention-days: 3

      # Self-hosted runners share a state (whole VM) between runs
      - name: Cleanup artifacts 🗑️
        run: |
          rm -f /tmp/${{ inputs.image }}-${{ inputs.platform }}.tar
        shell: bash
        if: always()
